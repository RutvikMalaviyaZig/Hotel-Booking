name: CI/CD Docker Deploy to EC2

on:
  push:
    branches: [ master ]  # change if your branch is 'main'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up SSH key
      env:
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
      run: |
        mkdir -p ~/.ssh
        echo "$EC2_SSH_KEY" | base64 --decode > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H "$EC2_HOST" >> ~/.ssh/known_hosts

    - name: Copy Files to EC2
      env:
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
        DEPLOY_DIR: ${{ secrets.DEPLOY_DIR }}
      run: |
        rsync -avz --delete ./ $EC2_USER@$EC2_HOST:${DEPLOY_DIR:-/home/ubuntu/app}

    - name: Detect changed service
      id: changes
      run: |
        git fetch origin master --depth=2
        changed="none"
        if git diff --name-only HEAD^ HEAD | grep '^server/'; then
          changed="server"
        elif git diff --name-only HEAD^ HEAD | grep '^client/'; then
          changed="client"
        fi
        echo "changed=$changed" >> $GITHUB_OUTPUT

    - name: Deploy on EC2
      if: steps.changes.outputs.changed != 'none'
      env:
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
        DEPLOY_DIR: ${{ secrets.DEPLOY_DIR }}
        SERVICE: ${{ steps.changes.outputs.changed }}
      run: |
        ssh $EC2_USER@$EC2_HOST << EOF
          cd "${DEPLOY_DIR:-/home/ubuntu/app}"
          docker compose build $SERVICE
          docker compose up -d $SERVICE
        EOF
